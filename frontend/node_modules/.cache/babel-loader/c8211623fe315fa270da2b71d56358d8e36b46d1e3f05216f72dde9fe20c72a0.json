{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\panug\\\\Desktop\\\\All_React_Projects\\\\react-tailwind\\\\moviebook\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { toast } from 'react-hot-toast';\nimport api from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n  useEffect(() => {\n    checkAuthStatus();\n  }, []);\n  const checkAuthStatus = async () => {\n    try {\n      const token = localStorage.getItem('accessToken');\n      if (!token) {\n        setLoading(false);\n        return;\n      }\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      const response = await api.get('/auth/profile');\n      setUser(response.data.data.user);\n    } catch (error) {\n      console.error('Auth check failed:', error);\n      localStorage.removeItem('accessToken');\n      localStorage.removeItem('refreshToken');\n      delete api.defaults.headers.common['Authorization'];\n    } finally {\n      setLoading(false);\n    }\n  };\n  const login = async formData => {\n    try {\n      const response = await api.post('/auth/login', formData);\n      const {\n        user: userData,\n        accessToken,\n        refreshToken\n      } = response.data.data;\n      localStorage.setItem('accessToken', accessToken);\n      localStorage.setItem('refreshToken', refreshToken);\n      api.defaults.headers.common['Authorization'] = `Bearer ${accessToken}`;\n      setUser(userData);\n      toast.success('Login successful!');\n\n      // Redirect based on role\n      if (userData.role === 'super_admin') {\n        navigate('/admin/super');\n      } else if (userData.role === 'theater_admin') {\n        navigate('/admin/theater');\n      } else {\n        navigate('/');\n      }\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response, _error$response$data;\n      const message = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Login failed';\n      toast.error(message);\n      return {\n        success: false,\n        message\n      };\n    }\n  };\n  const register = async userData => {\n    try {\n      const response = await api.post('/auth/register', userData);\n      const {\n        user: newUser,\n        accessToken,\n        refreshToken\n      } = response.data.data;\n      localStorage.setItem('accessToken', accessToken);\n      localStorage.setItem('refreshToken', refreshToken);\n      api.defaults.headers.common['Authorization'] = `Bearer ${accessToken}`;\n      setUser(newUser);\n      toast.success('Registration successful!');\n      navigate('/');\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      const message = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Registration failed';\n      toast.error(message);\n      return {\n        success: false,\n        message\n      };\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('accessToken');\n    localStorage.removeItem('refreshToken');\n    delete api.defaults.headers.common['Authorization'];\n    setUser(null);\n    toast.success('Logged out successfully');\n    navigate('/');\n  };\n  const value = {\n    user,\n    loading,\n    login,\n    register,\n    logout,\n    isAuthenticated: !!user,\n    isAdmin: (user === null || user === void 0 ? void 0 : user.role) === 'super_admin' || (user === null || user === void 0 ? void 0 : user.role) === 'theater_admin',\n    isSuperAdmin: (user === null || user === void 0 ? void 0 : user.role) === 'super_admin',\n    isTheaterAdmin: (user === null || user === void 0 ? void 0 : user.role) === 'theater_admin'\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"lk6viekuCMMpYORkLYLEq0Wsfds=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","useNavigate","toast","api","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","navigate","checkAuthStatus","token","localStorage","getItem","defaults","headers","common","response","get","data","error","console","removeItem","login","formData","post","userData","accessToken","refreshToken","setItem","success","role","_error$response","_error$response$data","message","register","newUser","_error$response2","_error$response2$data","logout","value","isAuthenticated","isAdmin","isSuperAdmin","isTheaterAdmin","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/panug/Desktop/All_React_Projects/react-tailwind/moviebook/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { toast } from 'react-hot-toast';\r\nimport api from '../services/api';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    checkAuthStatus();\r\n  }, []);\r\n\r\n  const checkAuthStatus = async () => {\r\n    try {\r\n      const token = localStorage.getItem('accessToken');\r\n      if (!token) {\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n      const response = await api.get('/auth/profile');\r\n      setUser(response.data.data.user);\r\n    } catch (error) {\r\n      console.error('Auth check failed:', error);\r\n      localStorage.removeItem('accessToken');\r\n      localStorage.removeItem('refreshToken');\r\n      delete api.defaults.headers.common['Authorization'];\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const login = async (formData) => {\r\n    try {\r\n      const response = await api.post('/auth/login', formData);\r\n      const { user: userData, accessToken, refreshToken } = response.data.data;\r\n\r\n      localStorage.setItem('accessToken', accessToken);\r\n      localStorage.setItem('refreshToken', refreshToken);\r\n      api.defaults.headers.common['Authorization'] = `Bearer ${accessToken}`;\r\n      setUser(userData);\r\n\r\n      toast.success('Login successful!');\r\n\r\n      // Redirect based on role\r\n      if (userData.role === 'super_admin') {\r\n        navigate('/admin/super');\r\n      } else if (userData.role === 'theater_admin') {\r\n        navigate('/admin/theater');\r\n      } else {\r\n        navigate('/');\r\n      }\r\n\r\n      return { success: true };\r\n    } catch (error) {\r\n      const message = error.response?.data?.message || 'Login failed';\r\n      toast.error(message);\r\n      return { success: false, message };\r\n    }\r\n  };\r\n\r\n  const register = async (userData) => {\r\n    try {\r\n      const response = await api.post('/auth/register', userData);\r\n      const { user: newUser, accessToken, refreshToken } = response.data.data;\r\n\r\n      localStorage.setItem('accessToken', accessToken);\r\n      localStorage.setItem('refreshToken', refreshToken);\r\n      api.defaults.headers.common['Authorization'] = `Bearer ${accessToken}`;\r\n      setUser(newUser);\r\n\r\n      toast.success('Registration successful!');\r\n      navigate('/');\r\n\r\n      return { success: true };\r\n    } catch (error) {\r\n      const message = error.response?.data?.message || 'Registration failed';\r\n      toast.error(message);\r\n      return { success: false, message };\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('accessToken');\r\n    localStorage.removeItem('refreshToken');\r\n    delete api.defaults.headers.common['Authorization'];\r\n    setUser(null);\r\n    toast.success('Logged out successfully');\r\n    navigate('/');\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    loading,\r\n    login,\r\n    register,\r\n    logout,\r\n    isAuthenticated: !!user,\r\n    isAdmin: user?.role === 'super_admin' || user?.role === 'theater_admin',\r\n    isSuperAdmin: user?.role === 'super_admin',\r\n    isTheaterAdmin: user?.role === 'theater_admin',\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}