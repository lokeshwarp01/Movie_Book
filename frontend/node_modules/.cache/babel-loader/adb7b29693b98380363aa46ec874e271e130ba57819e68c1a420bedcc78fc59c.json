{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\panug\\\\Desktop\\\\All_React_Projects\\\\react-tailwind\\\\moviebook\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { toast } from 'react-hot-toast';\nimport api from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n  useEffect(() => {\n    checkAuthStatus();\n  }, []);\n  const checkAuthStatus = async () => {\n    try {\n      const token = localStorage.getItem('accessToken');\n      if (!token) {\n        setLoading(false);\n        return;\n      }\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n      const response = await api.get('/auth/profile');\n      setUser(response.data.data.user);\n    } catch (error) {\n      console.error('Auth check failed:', error);\n      localStorage.removeItem('accessToken');\n      localStorage.removeItem('refreshToken');\n      delete api.defaults.headers.common['Authorization'];\n    } finally {\n      setLoading(false);\n    }\n  };\n  const login = async credentials => {\n    try {\n      const response = await api.post('/auth/login', credentials);\n      if (response.data.success) {\n        const {\n          user,\n          accessToken,\n          refreshToken\n        } = response.data.data;\n        localStorage.setItem('accessToken', accessToken);\n        localStorage.setItem('refreshToken', refreshToken);\n        api.defaults.headers.common['Authorization'] = `Bearer ${accessToken}`;\n        setUser(user);\n\n        // Role-based navigation\n        if (user.role === 'super_admin') {\n          navigate('/admin/super');\n        } else if (user.role === 'theater_admin') {\n          navigate('/admin/theater');\n        } else {\n          navigate('/');\n        }\n        toast.success('Login successful!');\n        return {\n          success: true\n        };\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Login error:', error);\n      const message = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Login failed';\n      return {\n        success: false,\n        message\n      };\n    }\n  };\n  const register = async userData => {\n    try {\n      const response = await api.post('/auth/register', userData);\n      if (response.data.success) {\n        toast.success('Registration successful! Please login.');\n        navigate('/login');\n        return {\n          success: true\n        };\n      }\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      console.error('Registration error:', error);\n      const message = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Registration failed';\n      toast.error(message);\n      return {\n        success: false,\n        message\n      };\n    }\n  };\n  const logout = async () => {\n    try {\n      localStorage.removeItem('accessToken');\n      localStorage.removeItem('refreshToken');\n      delete api.defaults.headers.common['Authorization'];\n      setUser(null);\n      navigate('/');\n      toast.success('Logged out successfully');\n    } catch (error) {\n      console.error('Logout error:', error);\n    }\n  };\n  const updateProfile = async profileData => {\n    try {\n      const response = await api.put('/auth/profile', profileData);\n      if (response.data.success) {\n        setUser(response.data.data.user);\n        toast.success('Profile updated successfully');\n        return {\n          success: true\n        };\n      }\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      console.error('Profile update error:', error);\n      const message = ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || 'Profile update failed';\n      toast.error(message);\n      return {\n        success: false,\n        message\n      };\n    }\n  };\n  const isAuthenticated = !!user;\n  const isAdmin = (user === null || user === void 0 ? void 0 : user.role) === 'super_admin';\n  const isTheaterAdmin = (user === null || user === void 0 ? void 0 : user.role) === 'theater_admin';\n  const isSuperAdmin = (user === null || user === void 0 ? void 0 : user.role) === 'super_admin';\n  const value = {\n    user,\n    loading,\n    login,\n    register,\n    logout,\n    updateProfile,\n    isAuthenticated,\n    isAdmin,\n    isTheaterAdmin,\n    isSuperAdmin\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"lk6viekuCMMpYORkLYLEq0Wsfds=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","useNavigate","toast","api","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","navigate","checkAuthStatus","token","localStorage","getItem","defaults","headers","common","response","get","data","error","console","removeItem","login","credentials","post","success","accessToken","refreshToken","setItem","role","_error$response","_error$response$data","message","register","userData","_error$response2","_error$response2$data","logout","updateProfile","profileData","put","_error$response3","_error$response3$data","isAuthenticated","isAdmin","isTheaterAdmin","isSuperAdmin","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/panug/Desktop/All_React_Projects/react-tailwind/moviebook/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { toast } from 'react-hot-toast';\r\nimport api from '../services/api';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    checkAuthStatus();\r\n  }, []);\r\n\r\n  const checkAuthStatus = async () => {\r\n    try {\r\n      const token = localStorage.getItem('accessToken');\r\n      if (!token) {\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n      const response = await api.get('/auth/profile');\r\n      setUser(response.data.data.user);\r\n    } catch (error) {\r\n      console.error('Auth check failed:', error);\r\n      localStorage.removeItem('accessToken');\r\n      localStorage.removeItem('refreshToken');\r\n      delete api.defaults.headers.common['Authorization'];\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const login = async (credentials) => {\r\n    try {\r\n      const response = await api.post('/auth/login', credentials);\r\n      \r\n      if (response.data.success) {\r\n        const { user, accessToken, refreshToken } = response.data.data;\r\n        \r\n        localStorage.setItem('accessToken', accessToken);\r\n        localStorage.setItem('refreshToken', refreshToken);\r\n        api.defaults.headers.common['Authorization'] = `Bearer ${accessToken}`;\r\n        setUser(user);\r\n        \r\n        // Role-based navigation\r\n        if (user.role === 'super_admin') {\r\n          navigate('/admin/super');\r\n        } else if (user.role === 'theater_admin') {\r\n          navigate('/admin/theater');\r\n        } else {\r\n          navigate('/');\r\n        }\r\n        \r\n        toast.success('Login successful!');\r\n        return { success: true };\r\n      }\r\n    } catch (error) {\r\n      console.error('Login error:', error);\r\n      const message = error.response?.data?.message || 'Login failed';\r\n      return { success: false, message };\r\n    }\r\n  };\r\n\r\n  const register = async (userData) => {\r\n    try {\r\n      const response = await api.post('/auth/register', userData);\r\n      \r\n      if (response.data.success) {\r\n        toast.success('Registration successful! Please login.');\r\n        navigate('/login');\r\n        return { success: true };\r\n      }\r\n    } catch (error) {\r\n      console.error('Registration error:', error);\r\n      const message = error.response?.data?.message || 'Registration failed';\r\n      toast.error(message);\r\n      return { success: false, message };\r\n    }\r\n  };\r\n\r\n  const logout = async () => {\r\n    try {\r\n      localStorage.removeItem('accessToken');\r\n      localStorage.removeItem('refreshToken');\r\n      delete api.defaults.headers.common['Authorization'];\r\n      setUser(null);\r\n      navigate('/');\r\n      toast.success('Logged out successfully');\r\n    } catch (error) {\r\n      console.error('Logout error:', error);\r\n    }\r\n  };\r\n\r\n  const updateProfile = async (profileData) => {\r\n    try {\r\n      const response = await api.put('/auth/profile', profileData);\r\n      \r\n      if (response.data.success) {\r\n        setUser(response.data.data.user);\r\n        toast.success('Profile updated successfully');\r\n        return { success: true };\r\n      }\r\n    } catch (error) {\r\n      console.error('Profile update error:', error);\r\n      const message = error.response?.data?.message || 'Profile update failed';\r\n      toast.error(message);\r\n      return { success: false, message };\r\n    }\r\n  };\r\n\r\n  const isAuthenticated = !!user;\r\n  const isAdmin = user?.role === 'super_admin';\r\n  const isTheaterAdmin = user?.role === 'theater_admin';\r\n  const isSuperAdmin = user?.role === 'super_admin';\r\n\r\n  const value = {\r\n    user,\r\n    loading,\r\n    login,\r\n    register,\r\n    logout,\r\n    updateProfile,\r\n    isAuthenticated,\r\n    isAdmin,\r\n    isTheaterAdmin,\r\n    isSuperAdmin\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}